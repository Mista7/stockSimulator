/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void stockMoneyChanged(GSlider source, GEvent event) { //_CODE_:stockMoneySlider:465912:
  stockMoneyBuy = stockMoneySlider.getValueI();
} //_CODE_:stockMoneySlider:465912:

public void stockBought(GButton source, GEvent event) { //_CODE_:buyStock:944013:
  if(stockMoneyBuy == 0) {
    return;
  }
  else {
    if(balance >= stockMoneyBuy){
      balance -= stockMoneyBuy;
      if(stockType.equals("Pear")){
        pear.sharesBought += stockMoneyBuy/(pear.values.get(pear.values.size()-1));
        //println(pear.sharesBought);
        pear.addValue(stockMoneyBuy);
      }
      else if(stockType.equals("Schattman's Shoe Store")){
        shoeStore.sharesBought += stockMoneyBuy/shoeStore.values.get(shoeStore.values.size()-1);
        //println(shoeStore.sharesBought);
        shoeStore.addValue(stockMoneyBuy);
      }
      else {
        blueberry.sharesBought += stockMoneyBuy/blueberry.values.get(blueberry.values.size()-1);
        //println(blueberry.sharesBought);
        blueberry.addValue(stockMoneyBuy);
      }
    }
  }
} //_CODE_:buyStock:944013:

public void stockMenuClicked(GDropList source, GEvent event) { //_CODE_:StockMenu:499289:
  stockType = StockMenu.getSelectedText();
  println(stockType);
} //_CODE_:StockMenu:499289:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  stockMoneySlider = new GSlider(this, 6, 112, 100, 40, 10.0);
  stockMoneySlider.setShowValue(true);
  stockMoneySlider.setShowLimits(true);
  stockMoneySlider.setLimits(0, 0, initialMoney);
  stockMoneySlider.setNumberFormat(G4P.INTEGER, 0);
  stockMoneySlider.setOpaque(false);
  stockMoneySlider.addEventHandler(this, "stockMoneyChanged");
  StockBuyLabel = new GLabel(this, 5, 67, 150, 43);
  StockBuyLabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  StockBuyLabel.setText("Select the amount of money to spend on stock");
  StockBuyLabel.setOpaque(false);
  buyStock = new GButton(this, 7, 157, 80, 30);
  buyStock.setText("Buy");
  buyStock.addEventHandler(this, "stockBought");
  StockMenu = new GDropList(this, 4, 31, 146, 92, 3, 10);
  StockMenu.setItems(loadStrings("list_499289"), 0);
  StockMenu.addEventHandler(this, "stockMenuClicked");
  label1 = new GLabel(this, 3, 8, 93, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Stock Options:");
  label1.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GSlider stockMoneySlider; 
GLabel StockBuyLabel; 
GButton buyStock; 
GDropList StockMenu; 
GLabel label1; 
